#!/usr/bin/env genome-perl

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
    $ENV{UR_COMMAND_DUMP_STATUS_MESSAGES} = 1;
};

use strict;
use warnings;

use above 'Genome';

use Genome::Utility::Test 'compare_ok';
use Test::More;

use_ok('Genome::Model::DeNovoAssembly::Build::MergeAndLinkSxResults') or die;
use_ok('Genome::Model::DeNovoAssembly::Build::Test') or die;

my $build = Genome::Model::DeNovoAssembly::Build::Test->build_for_assembler('soap de-novo-assemble');
ok($build, 'build for testing');
my $example_build = Genome::Model::DeNovoAssembly::Build::Test->build_for_assembler('soap de-novo-assemble');
ok($example_build, 'example build');

my $sx_result = Genome::InstrumentData::SxResult->__define__(
    instrument_data_id => $build->instrument_data->id,
    read_processor => 'trim bwa-style -trim-qual-level 10 | filter by-length -filter-length 35 | rename illumina-to-pcap',
    output_dir => Genome::Config::get('test_inputs').'/Genome-Model/DeNovoAssembly/Build-ProcessInstrumentData-v1/',
    output_file_type => 'sanger',
    output_file_count => 2,
);
$sx_result->lookup_hash( $sx_result->calculate_lookup_hash );
ok($sx_result, 'define sx result');

my $merge_and_link = Genome::Model::DeNovoAssembly::Build::MergeAndLinkSxResults->create(
    build => [ $build ],
);
ok($merge_and_link, 'create merge and link and link sx results');

ok($merge_and_link->execute, 'execute succeeded');
is($merge_and_link->output_build, $build, 'set output build');
my @sx_results = $merge_and_link->sx_results;
ok(@sx_results, 'set sx results during execute on merge and link inst data');
is($build->reads_attempted, 28028, 'set reads attempted on build');
is($build->reads_processed, 28028, 'set reads processed on build');
is($build->reads_processed_success, '1.000', 'set reads processed success on build');

for my $file_name ( $sx_results[0]->read_processor_output_files ) {
    compare_ok($sx_results[0]->output_dir.'/'.$file_name, Genome::Config::get('test_inputs').'/Genome-Model/DeNovoAssembly/Build-MergeAndLinkSxResults-v1/'.$file_name, "fastq $file_name matches");
}

for (1..2) {
    ok(-l $build->data_directory.'/merged--7777.'.$_.'.fastq', "linked fastq $_");
}

for (qw/ input output /) {
    ok(-l $build->data_directory.'/merged--7777.'.$_.'_metrics', "linked $_ metrics");
}

#print $build->data_directory."\n";<STDIN>;
done_testing();
