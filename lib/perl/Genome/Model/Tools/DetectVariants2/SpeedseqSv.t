use strict;
use warnings;

BEGIN {
    $ENV{NO_LSF}                         = 1;
    $ENV{UR_DBI_NO_COMMIT}               = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
}

use above 'Genome';
use Genome::SoftwareResult;

use Test::More;
use Test::Exception;
use File::Compare qw(compare);
use Genome::Utility::Test qw(compare_ok);
use Genome::Test::Factory::SoftwareResult::User;

my $test_dir = "/gscmnt/gc2801/analytics/mfulton/test1";
	my $output = Genome::Sys->create_temp_directory();
        my $temp_directory = Genome::Sys->create_temp_directory();
        my $data_dir = '/gscmnt/gc2801/analytics/mfulton/genome2/lib/perl/Genome/Test/Data.pm.d/NA12878';
        my $bam = "$data_dir/NA12878.20slice.30X.aligned.bam";
        my $split_bam = "$data_dir/NA12878.20slice.30X.splitters.bam";
        my $discordant_bam = "$data_dir/NA12878.20slice.30X.discordants.bam";
        my $reference_fasta = "$data_dir/human_g1k_v37_20_42220611-42542245.fasta";        
	my $pkg2 = 'Genome::Model::Tools::DetectVariants2::SpeedseqSv';
	my $refbuild_id = 101947881;
	my $result_users = Genome::Test::Factory::SoftwareResult::User->setup_user_hash(
    reference_sequence_build_id => $refbuild_id,
);



my $command2 = $pkg2->create(
	output_directory => $output,
	reference_build_id => $refbuild_id,
	result_users => $result_users,	
);

ok($command2->execute, 'Executed `gmt detect-variants2 Speedseq` command');

compare_ok("$output/svs.hq.sv.vcf.gz","$test_dir/test1.sv.vcf.gz");
compare_ok("$output/svs.hq.sv.vcf.gz.tbi","$test_dir/test1.sv.vcf.gz.tbi");
compare_ok("$output/svs.hq.sv.NA12878.20slice.30X.aligned.bam.readdepth.bed","$test_dir/test1.sv.NA12878.20slice.30X.aligned.bam.readdepth.bed");
compare_ok("$output/svs.hq.sv.NA12878.20slice.30X.aligned.bam.readdepth.txt","$test_dir/test1.sv.NA12878.20slice.30X.aligned.bam.readdepth.txt");

done_testing();
