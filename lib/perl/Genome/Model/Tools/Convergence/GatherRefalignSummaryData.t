#!/usr/bin/env genome-perl

use strict;
use warnings;

use above "Genome";
use Test::More tests => 4;

$ENV{UR_DBI_NO_COMMIT} = 1;
$ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;

use constant TEST_DATA_DIR => Genome::Config::get('test_inputs') . '/Genome-Model-Tools-Convergence-GatherRefalignSummaryData/';

use constant EXPECTED_DATA => {
  'haploid_coverage' => '31.072',
  'build_id' => '101057421',
  'unfiltered_dbsnp_concordance' => '77.08%',
  'lane_count' => '18',
  'unfiltered_snp_calls' => '4,500,450',
  'filtered_snp_calls' => '3,468,651',
  'filtered_dbsnp_concordance' => '90.61%',
  'unfiltered_diploid_heterozygous_percentage' => 'Not Available',
  'filtered_diploid_heterozygous_percentage' => 'Not Available',
};

my $test_build = setup_test_build();  #A lot of objects have to be created to create a build!

my $gather_data_cmd = Genome::Model::Tools::Convergence::GatherRefalignSummaryData->create(
    build_id => $test_build->id,
);
ok($gather_data_cmd, 'Created data gathering command.');
ok($gather_data_cmd->execute, 'Executed data gathering command.');

my $result_data = $gather_data_cmd->data;
ok($result_data, 'Got data back from command.');
is_deeply($result_data, EXPECTED_DATA, 'Data returned matches expected result.');


sub setup_test_build {
    use Genome::Test::Factory::Model::ReferenceAlignment;
    use Genome::Test::Factory::Build;
    use Genome::Test::Factory::Library;
    use Genome::Test::Factory::InstrumentData::Solexa;

    my $test_model = Genome::Test::Factory::Model::ReferenceAlignment->setup_object();

    my $library = Genome::Test::Factory::Library->setup_object(
        sample_id => $test_model->subject->id,
    );

    my $test_instrument_data = Genome::Test::Factory::InstrumentData::Solexa->setup_object(
        library_id => $library->id,
    );
    $test_model->add_instrument_data($test_instrument_data);

    return Genome::Test::Factory::Build->setup_object(
        model_id => $test_model->id,
        data_directory => TEST_DATA_DIR . '/build_dir',
    );
}
