#!/usr/bin/perl

use strict;
use warnings;

BEGIN {
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = "1";
    $ENV{UR_DBI_NO_COMMIT} = "1";
};

use above 'Genome';
use Cwd;
use IO::File;
use File::Path;
use File::Compare;
#use Test::More;
use Test::More skip_all => 'Broken Test -- runs too long -- FIXME';
use lib "/gscuser/jmartin/git/g/lib/perl/Genome/InstrumentData/Command/Import"; #REMOVE THIS ONCE I AM READY TO DEPLOY!!!!
use VervetHmpSraProcess;

#Setup test_dir
my $test_dir = '/gscmnt/sata156/research/mmitreva/HMP_DAWG/VERVET_HMP/VERVET_PIPELINE_WORK/TEST'; #THIS IS A TEMPORARY LOCATION!!!!
#my $test_dir = '$GENOME_TEST_INPUTS/Genome-InstrumentData-Import-Hmp/SUBDIR';
my $bam_name = 'GoldStandardForTesting.2873462096.cleaned.bam';
my $bam_path = $test_dir . '/' . $bam_name;


#Test create
use_ok('VervetHmpSraProcess') or die;

#Test function of class ... NOTE: srs_id == sample_name (such as 'WFAA-1108-0104014118')    srr_id == subset_name (such as '2874804312')


my $sra_samples_file = $test_dir . "/test_sra_samples.FULL_TEST";
my $srr_list_file = $test_dir . "/test_srr_list.FULL_TEST";
####my $sra_samples_file = $test_dir . "/test_sra_samples.SMALL_TEST";
####my $srr_list_file = $test_dir . "/test_srr_list.SMALL_TEST";


my %srr_to_srs_index;
my $sra_samples = new IO::File $sra_samples_file;
while (<$sra_samples>) {
    chomp;
    my @line = split(/\t/);
    $srr_to_srs_index{$line[0]} = $line[1];
}
my $srr_list = new IO::File $srr_list_file;
my $index;
while (<$srr_list>) {
    chomp;
    my $srr_id = $_;
    my $srs_id = $srr_to_srs_index{$srr_id};
    push(@{$index->{$srs_id}},$srr_id);
}
foreach my $sample_name (sort {$a cmp $b} keys(%{$index})) { #This example should only be 1 sample_name with 2 subset_names
    my $subset_name_space_delimited_list;
    foreach my $subset_name (sort {$a <=> $b} @{$index->{$sample_name}}) {
	$subset_name_space_delimited_list .= "$subset_name ";
    }
    $subset_name_space_delimited_list =~ s/\s+$//;
    my $cmd = VervetHmpSraProcess->create(srs_sample_id => "$sample_name",srr_accessions => "$subset_name_space_delimited_list",picard_dir => Genome::Config::get('sw_legacy_java') . "/samtools/picard-tools-1.27");
    ok($cmd, 'created VervetHmpSraProcess object');
    ok($cmd->execute, 'executed VervetHmpSraProcess object');
}

#Test output to make sure everything worked










#Exit the test
done_testing();
